<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.contract.dao.ContractBookDao">
    
	<sql id="contractBookColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.house_id AS "houseId",
		a.room_id AS "roomId",
		a.user_name AS "userName",
		a.user_phone AS "userPhone",
		a.user_gender AS "userGender",
		a.book_date AS "bookDate",
		a.book_status AS "bookStatus",
		a.create_by AS "createBy.id",
		a.sales_id AS "salesId",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		t.project_name,
		t.building_name,
		t.house_code,
		t.room_no,
		t.short_desc,
		t.short_location,
		t.attachment_path,
		su.login_name salesName
	</sql>
	
	<sql id="contractBookJoins">
		left join 
		(select p.project_name,b.building_name,h.id house_id,h.house_code,'' room_no,h.short_desc,h.short_location,a.attachment_path from t_house h 
		left join t_property_project p on h.property_project_id=p.id
		left join t_building b on h.building_id=b.id
		left join t_attachment a on h.id=a.house_id
		union all 
		select p.project_name,b.building_name,r.id house_id,h.house_code,r.room_no,r.short_desc,r.short_location,a.attachment_path from t_room r 
		left join t_property_project p on r.property_project_id=p.id 
		left join t_building b on r.building_id=b.id 
		left join t_house h on r.house_id=h.id 
		left join t_attachment a on r.id=a.room_id) t on a.house_id = t.house_id 
		left join sys_user su on a.sales_id = su.id
	</sql>
    
	<select id="get" resultType="ContractBook">
		SELECT 
			<include refid="contractBookColumns"/>
		FROM t_contract_book a
		<include refid="contractBookJoins"/>
		WHERE a.id = #{id} and a.del_flag='0' AND a.user_id = #{userId}
	</select>
	
	<select id="findByUser" resultType="ContractBook">
		SELECT 
			<include refid="contractBookColumns"/>
		FROM t_contract_book a
		<include refid="contractBookJoins"/>
		WHERE (a.house_id = #{houseId} or a.room_id = #{roomId}) and book_status in('0','1') and a.del_flag='0' AND a.user_id = #{userId}
	</select>
	
	<select id="findBookedContract" resultType="ContractBook">
		SELECT 
		  da.id AS "depositId",
		  da.CREATE_DATE,
		  da.del_flag,
		  da.update_by updateUser,
		  tt.pay_way,
		  tt.house_id,
		  CONCAT(tt.house_code, tt.room_no) "roomNo",
		  da.agreement_status AS "bookStatus",
		  da.agreement_busi_status AS "bookBusiStatus",
		  tt.short_desc "shortDesc",
		  tt.short_location,
		  tt.attachment_path "attachmentPath",
		  ct.cell_phone 
		FROM
		  T_DEPOSIT_AGREEMENT da 
		  LEFT JOIN 
		    (SELECT 
		      DEPOSIT_AGREEMENT_ID,
		      te.cell_phone,
		      te.id_no 
		    FROM
		      t_contract_tenant cte,
		      t_tenant te 
		    WHERE cte.tenant_id = te.id 
		      AND cte.del_flag = '0' 
		      AND te.del_flag = '0') ct 
		    ON da.id = ct.deposit_agreement_id 
		  LEFT JOIN 
		    (SELECT 
		      p.project_name,
		      b.building_name,
		      h.pay_way,
		      h.id house_id,
		      h.house_code,
		      '' room_no,
		      h.short_desc,
		      h.short_location,
		      a.attachment_path 
		    FROM
		      t_house h 
		      LEFT JOIN t_attachment a 
		        ON h.`ID` = a.`HOUSE_ID`,
		      t_property_project p,
		      t_building b 
		    WHERE h.property_project_id = p.id 
		      AND h.building_id = b.id 
		    UNION
		    ALL 
		    SELECT 
		      p.project_name,
		      b.building_name,
		      r.pay_way,
		      r.id house_id,
		      h.house_code,
		      CONCAT('-', r.room_no) room_no,
		      r.short_desc,
		      r.short_location,
		      a.attachment_path 
		    FROM
		      t_room r 
		      LEFT JOIN t_attachment a 
		        ON r.id = a.`ROOM_ID`,
		      t_property_project p,
		      t_building b,
		      t_house h 
		    WHERE r.property_project_id = p.id 
		      AND r.building_id = b.id 
		      AND r.house_id = h.id) tt 
		    ON (
		      (
		        da.house_id = tt.house_id 
		        AND da.rent_mode = '0'
		      ) 
		      OR da.room_id = tt.house_id
		    ) 
	  WHERE ct.cell_phone = #{userPhone} and da.data_source='2' 
	  <if test = "depositId != null and depositId != ''" > 
	  	AND da.id = #{depositId}
	  </if>
	  ORDER BY create_date DESC
	</select>
	
	<select id="findRentContract" resultType="ContractBook">
	 	SELECT 
		  da.id AS "contractId",
		  da.CONTRACT_CODE AS "contractCode",
		  da.RENTAL AS "rent",
		  tt.house_id,
		  da.contract_status AS "bookStatus",
		  da.contract_busi_status AS "contractBusiStatus",
		  tt.short_desc,
		  tt.short_location,
		  tt.attachment_path,
		  ct.cell_phone,
		  da.del_flag,
		  da.update_by updateUser,
		  da.expired_date end_date 
		FROM
		  T_RENT_CONTRACT da 
		  LEFT JOIN 
		    (SELECT 
		      LEASE_CONTRACT_ID,
		      te.cell_phone 
		    FROM
		      t_contract_tenant cte,
		      t_tenant te 
		    WHERE cte.tenant_id = te.id 
		      AND cte.del_flag = '0' 
		      AND te.del_flag = '0') ct 
		    ON da.id = ct.LEASE_CONTRACT_ID 
		  LEFT JOIN 
		    (SELECT 
		      p.project_name,
		      b.building_name,
		      h.id house_id,
		      h.house_code,
		      '' room_no,
		      h.short_desc,
		      h.short_location,
		      a.attachment_path 
		    FROM
		      t_house h 
		      LEFT JOIN t_attachment a 
		        ON h.`ID` = a.`HOUSE_ID`,
		      t_property_project p,
		      t_building b 
		    WHERE h.property_project_id = p.id 
		      AND h.building_id = b.id 
		    UNION
		    ALL 
		    SELECT 
		      p.project_name,
		      b.building_name,
		      r.id house_id,
		      h.house_code,
		      r.room_no,
		      r.short_desc,
		      r.short_location,
		      a.attachment_path 
		    FROM
		      t_room r 
		      LEFT JOIN t_attachment a 
		        ON r.id = a.`ROOM_ID`,
		      t_property_project p,
		      t_building b,
		      t_house h 
		    WHERE r.property_project_id = p.id 
		      AND r.building_id = b.id 
		      AND r.house_id = h.id) tt 
		    ON (
		      (
		        da.house_id = tt.house_id 
		        AND da.rent_mode = '0'
		      ) 
		      OR da.room_id = tt.house_id
		    ) 
			WHERE ct.cell_phone = #{userPhone} and da.data_source='2'
			<if test="contractId != null and contractId != ''">
				AND da.id = #{contractId}
			</if>
			<if test="contractBusiStatus != null and contractBusiStatus != ''">
				AND da.contract_busi_status = #{contractBusiStatus}
			</if>
			order by da.create_date desc
	</select>
	
	<select id="findList" resultType="ContractBook">
		SELECT 
			<include refid="contractBookColumns"/>
		FROM t_contract_book a
		<include refid="contractBookJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="userName != null and userName != ''">
				AND a.user_name = #{userName}
			</if>
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
			<if test="userPhone != null and userPhone != ''">
				AND a.user_phone = #{userPhone}
			</if>
			<if test="bookDate != null and bookDate != ''">
				AND date_format(a.book_date,'%Y-%m-%d') = date_format(#{bookDate},'%Y-%m-%d')
			</if>
			<if test="bookStatus != null and bookStatus != ''">
				AND a.book_status = #{bookStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ContractBook">
		SELECT 
			<include refid="contractBookColumns"/>
		FROM t_contract_book a
		<include refid="contractBookJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO t_contract_book(
			id,
			user_id,
			house_id,
			room_id,
			user_name,
			user_phone,
			user_gender,
			book_date,
			book_status,
			create_by,
			sales_id,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{userId},
			#{houseId},
			#{roomId},
			#{userName},
			#{userPhone},
			#{userGender},
			#{bookDate},
			#{bookStatus},
			#{createBy.id},
			#{salesId},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE t_contract_book SET 	
			user_id = #{userId},
			house_id = #{houseId},
			room_id = #{roomId},
			user_name = #{userName},
			user_phone = #{userPhone},
			user_gender = #{userGender},
			book_date = #{bookDate},
			book_status = #{bookStatus},
			sales_id = #{salesId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateStatusByHouseId">
		UPDATE t_contract_book SET 	
			book_status = #{bookStatus}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE t_contract_book SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE house_id = #{houseId} or room_id = #{roomId}
	</update>
</mapper>