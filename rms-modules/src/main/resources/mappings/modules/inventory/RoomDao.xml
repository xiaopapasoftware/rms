<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.inventory.dao.RoomDao">

	<sql id="roomColumns">
		a.id AS "id",
		a.property_project_id AS "propertyProject.id",
		pp.project_name AS "propertyProject.projectName",
		a.building_id AS
		"building.id",
		tb.building_name AS "building.buildingName",
		a.house_id
		AS "house.id",
		th.house_no AS "house.houseNo",
		a.room_no AS "roomNo",
		a.meter_no AS "meterNo",
		a.room_space AS "roomSpace",
		a.orientation AS
		"orientation",
		a.structure AS "structure",
		a.room_status AS
		"roomStatus",
		a.create_by AS "createBy.id",
		u1.login_name AS
		"createBy.loginName",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		u2.login_name AS "updateBy.loginName",
		a.update_date AS
		"updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		atta.attachment_path AS "attachmentPath",
		a.is_feature as "isFeature",
		a.rental as "rental",
		a.short_desc as "shortDesc",
		a.short_location as
		"shortLocation",
		a.pay_way as "payWay"
	</sql>

	<sql id="roomJoins">
		LEFT JOIN sys_user u1 ON u1.id = a.create_by
		LEFT JOIN
		sys_user u2 ON u2.id = a.update_by
		LEFT JOIN t_property_project pp on
		pp.id = a.property_project_id
		LEFT JOIN t_building tb on tb.id =
		a.building_id
		LEFT JOIN t_house th on th.id = a.house_id
		left join
		t_attachment atta on atta.room_id = a.id
	</sql>

	<select id="get" resultType="Room">
		SELECT
		<include refid="roomColumns" />
		FROM t_room a
		<include refid="roomJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="Room">
		SELECT
		<include refid="roomColumns" />
		FROM t_room a
		<include refid="roomJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if
				test="propertyProject != null and propertyProject.id != null and propertyProject.id != ''">
				AND a.property_project_id = #{propertyProject.id}
			</if>
			<if test="building != null and building.id != null and building.id != ''">
				AND a.building_id = #{building.id}
			</if>
			<if test="house != null and house.id != null and house.id != ''">
				AND a.house_id = #{house.id}
			</if>
			<if test="roomNo != null and roomNo != ''">
				AND a.room_no LIKE
				<if test="dbName == 'oracle'">'%'||#{roomNo}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{roomNo}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{roomNo},'%')</if>
			</if>
			<if test="roomStatus != null and roomStatus != ''">
				AND a.room_status = #{roomStatus}
			</if>
			<if test="choose !=null and choose != ''">
				and a.room_status not in('0','2','3')
			</if>
			<if test="isFeature != null and isFeature != ''">
				and a.is_feature = #{isFeature}
			</if>
		</where>

		<!-- 数据范围过滤 -->
		${sqlMap.dsf}

		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findRoomByPrjAndBldAndHouNoAndRomNo" resultType="Room">
		SELECT
		a.id AS "id",
		a.property_project_id AS "propertyProject.id",
		a.building_id AS "building.id",
		a.house_id AS "house.id",
		a.room_no AS "roomNo",
		a.room_status AS "roomStatus",
		a.del_flag AS "delFlag",
		a.is_feature as "isFeature",
		a.rental as "rental",
		a.short_desc as "shortDesc",
		a.short_location as "shortLocation",
		a.pay_way as "payWay"
		FROM t_room a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		AND a.property_project_id = #{propertyProject.id}
		AND a.building_id = #{building.id}
		AND a.house_id = #{house.id}
		AND a.room_no = #{roomNo}
	</select>

	<!-- 查询某个小区下面某个时间点所有的房间数量 -->
	<select id="queryRoomsCountByProjectPropertyId" resultType="int">
	  	SELECT  COUNT(*)
	  	FROM    t_room tr 
		WHERE   tr.`PROPERTY_PROJECT_ID` = #{propertyProjectId}
		AND     tr.`DEL_FLAG` = '0'
	    <if test="startDate != null and startDate != ''">
	  	  <![CDATA[
			AND tr.create_date <=  #{startDate}
		  ]]>
		</if>
	</select>
	
	<select id="findAllList" resultType="Room">
		SELECT
		<include refid="roomColumns" />
		FROM t_room a
		<include refid="roomJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>

		<!-- 数据范围过滤 -->
		${sqlMap.dsf}

		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="getJoinRentAllRoom" resultType="Room">
		select tr.id,tr.ROOM_NO,tr.ROOM_STATUS,
		th.ID house.id,th.HOUSE_NO house.houseNo,
		th.HOUSE_CODE house.houseCode,
		th.intent_mode house.intentMode ,
		th.property_project_id house.propertyProject.id,
		th.gasAccountNum house.gasAccountNum,
		th.waterAccountNum house.waterAccountNum
		from t_room tr
		left join t_house th on th.id=tr.HOUSE_ID
		where tr.DEL_FLAG=0 and th.DEL_FLAG=0
		and th.intent_mode=1 and tr.ROOM_STATUS=3
	</select>

	<insert id="insert">
		INSERT INTO t_room(
		id,
		property_project_id,
		building_id,
		house_id,
		room_no,
		meter_no,
		room_space,
		orientation,
		structure,
		room_status,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag,
		is_feature,
		rental,
		short_desc,
		short_location,
		pay_way
		) VALUES (
		#{id},
		#{propertyProject.id},
		#{building.id},
		#{house.id},
		#{roomNo},
		#{meterNo},
		#{roomSpace},
		#{orientation},
		#{structure},
		#{roomStatus},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag},
		#{isFeature},
		#{rental},
		#{shortDesc},
		#{shortLocation},
		#{payWay}
		)
	</insert>

	<update id="update">
		UPDATE t_room SET
		property_project_id = #{propertyProject.id},
		building_id = #{building.id},
		house_id = #{house.id},
		room_no = #{roomNo},
		meter_no = #{meterNo},
		room_space = #{roomSpace},
		orientation = #{orientation},
		structure = #{structure},
		<if test="roomStatus != null and roomStatus != ''">
			room_status = #{roomStatus},
		</if>
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks},
		is_feature = #{isFeature},
		rental = #{rental},
		short_desc = #{shortDesc},
		short_location = #{shortLocation},
		pay_way = #{payWay}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE t_room SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="updateRoomStatus4NewSign">
		UPDATE 		t_room 
		SET 		room_status = '3',
					update_by = #{updateBy.id},
					update_date = #{updateDate}
		WHERE 		id = #{id}
		AND 		room_status = '1'
		and 		del_flag = #{DEL_FLAG_NORMAL}
	</update>

	<update id="updateRoomStatus4RenewSign">
		UPDATE 		t_room 
		SET 		room_status = '3',
					update_by = #{updateBy.id},
					update_date = #{updateDate}
		WHERE 		id = #{id}
		AND 		room_status = '3'
		and 		del_flag = #{DEL_FLAG_NORMAL}
	</update>
	
	<update id="updateRoomStatusFromDepositToContract">
		UPDATE 		t_room 
		SET 		room_status = '3',
					update_by = #{updateBy.id},
					update_date = #{updateDate}
		WHERE 		id = #{id}
		AND 		room_status = '2'
		and 		del_flag = #{DEL_FLAG_NORMAL}
	</update>
	
	<update id="updateRoomStatus4Deposit">
		UPDATE 		t_room 
		SET 		room_status = '2',
					update_by = #{updateBy.id},
					update_date = #{updateDate}
		WHERE 		id = #{id}
		AND 		room_status = '1'  
		and 		del_flag = #{DEL_FLAG_NORMAL}
	</update>

	<select id="findRoomListByHouseId" resultType="Room">
		SELECT
		a.id AS "id",
		a.room_no AS "roomNo"
		FROM t_room a
		WHERE
		a.del_flag = '0'
		AND a.house_id = #{houseId}
	</select>
</mapper>