<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thinkgem.jeesite.modules.fee.electricity.dao.FeeEleReadFlowDao">

    <resultMap id="BaseResultMap" type="com.thinkgem.jeesite.modules.fee.electricity.entity.FeeEleReadFlow">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="business_id" property="businessId" jdbcType="VARCHAR"/>
        <result column="from_source" property="fromSource" jdbcType="NUMERIC"/>
        <result column="property_id" property="propertyId" jdbcType="VARCHAR"/>
        <result column="house_id" property="houseId" jdbcType="VARCHAR"/>
        <result column="room_id" property="roomId" jdbcType="VARCHAR"/>
        <result column="house_ele_num" property="houseEleNum" jdbcType="VARCHAR"/>
        <result column="ele_read_date" property="eleReadDate" jdbcType="TIMESTAMP"/>
        <result column="ele_degree" property="eleDegree" jdbcType="NUMERIC"/>
        <result column="ele_peak_degree" property="elePeakDegree" jdbcType="NUMERIC"/>
        <result column="ele_valley_degree" property="eleValleyDegree" jdbcType="NUMERIC"/>
        <result column="create_by" property="createBy.id" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy.id" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="FeeEleReadFlowWithAllInfo"
               type="com.thinkgem.jeesite.modules.fee.electricity.entity.vo.FeeEleReadFlowVo" extends="BaseResultMap">
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="area_name" property="areaName" jdbcType="VARCHAR"/>
        <result column="property_name" property="propertyName" jdbcType="VARCHAR"/>
        <result column="building_id" property="buildingId" jdbcType="VARCHAR"/>
        <result column="building_name" property="buildingName" jdbcType="VARCHAR"/>
        <result column="house_no" property="houseNo" jdbcType="VARCHAR"/>
        <result column="ROOM_NO" property="roomNo" jdbcType="VARCHAR"/>
        <result column="intent_mode" property="intentMode" jdbcType="NUMERIC"/>
        <result column="intent_mode_name" property="intentModeName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id, business_id, from_source, property_id, house_id, room_id, house_ele_num, ele_read_date, ele_degree, ele_peak_degree, ele_valley_degree, create_by, create_date, update_by, update_date, remarks, del_flag
    </sql>

    <sql id="Insert_Columns">
        <if test="id!=null">id,</if>
        <if test="businessId!=null">business_id,</if>
        <if test="fromSource!=null">from_source,</if>
        <if test="propertyId!=null">property_id,</if>
        <if test="houseId!=null">house_id,</if>
        <if test="roomId!=null">room_id,</if>
        <if test="houseEleNum!=null">house_ele_num,</if>
        <if test="eleReadDate!=null">ele_read_date,</if>
        <if test="eleDegree!=null">ele_degree,</if>
        <if test="elePeakDegree!=null">ele_peak_degree,</if>
        <if test="eleValleyDegree!=null">ele_valley_degree,</if>
        <if test="createBy!=null">create_by,</if>
        <if test="createDate!=null">create_date,</if>
        <if test="updateBy!=null">update_by,</if>
        <if test="updateDate!=null">update_date,</if>
        <if test="remarks!=null">remarks,</if>
        <if test="delFlag!=null">del_flag,</if>
    </sql>
    <sql id="Insert_Values">
        <if test="id!=null">#{id,jdbcType=VARCHAR},</if>
        <if test="businessId!=null">#{businessId,jdbcType=VARCHAR},</if>
        <if test="fromSource!=null">#{fromSource,jdbcType=NUMERIC},</if>
        <if test="propertyId!=null">#{propertyId,jdbcType=VARCHAR},</if>
        <if test="houseId!=null">#{houseId,jdbcType=VARCHAR},</if>
        <if test="roomId!=null">#{roomId,jdbcType=VARCHAR},</if>
        <if test="houseEleNum!=null">#{houseEleNum,jdbcType=VARCHAR},</if>
        <if test="eleReadDate!=null">#{eleReadDate,jdbcType=TIMESTAMP},</if>
        <if test="eleDegree!=null">#{eleDegree,jdbcType=NUMERIC},</if>
        <if test="elePeakDegree!=null">#{elePeakDegree,jdbcType=NUMERIC},</if>
        <if test="eleValleyDegree!=null">#{eleValleyDegree,jdbcType=NUMERIC},</if>
        <if test="createBy!=null">#{createBy.id,jdbcType=VARCHAR},</if>
        <if test="createDate!=null">#{createDate,jdbcType=TIMESTAMP},</if>
        <if test="updateBy!=null">#{updateBy.id,jdbcType=VARCHAR},</if>
        <if test="updateDate!=null">#{updateDate,jdbcType=TIMESTAMP},</if>
        <if test="remarks!=null">#{remarks,jdbcType=VARCHAR},</if>
        <if test="delFlag!=null">#{delFlag,jdbcType=VARCHAR},</if>
    </sql>
    <sql id="Batch_Insert_Values">
        #{item.id,jdbcType=VARCHAR},
        #{item.businessId,jdbcType=VARCHAR},
        #{item.fromSource,jdbcType=NUMERIC},
        #{item.propertyId,jdbcType=VARCHAR},
        #{item.houseId,jdbcType=VARCHAR},
        #{item.roomId,jdbcType=VARCHAR},
        #{item.houseEleNum,jdbcType=VARCHAR},
        #{item.eleReadDate,jdbcType=TIMESTAMP},
        #{item.eleDegree,jdbcType=NUMERIC},
        #{item.elePeakDegree,jdbcType=NUMERIC},
        #{item.eleValleyDegree,jdbcType=NUMERIC},
        #{item.createBy.id,jdbcType=VARCHAR},
        #{item.createDate,jdbcType=TIMESTAMP},
        #{item.updateBy.id,jdbcType=VARCHAR},
        #{item.updateDate,jdbcType=TIMESTAMP},
        #{item.remarks,jdbcType=VARCHAR},
        #{item.delFlag,jdbcType=VARCHAR},
    </sql>

    <sql id="Update_Set_From_Bean">
        <if test="businessId!=null">business_id=#{businessId,jdbcType=VARCHAR},</if>
        <if test="fromSource!=null">from_source=#{fromSource,jdbcType=NUMERIC},</if>
        <if test="propertyId!=null">property_id=#{propertyId,jdbcType=VARCHAR},</if>
        <if test="houseId!=null">house_id=#{houseId,jdbcType=VARCHAR},</if>
        <if test="roomId!=null">room_id=#{roomId,jdbcType=VARCHAR},</if>
        <if test="houseEleNum!=null">house_ele_num=#{houseEleNum,jdbcType=VARCHAR},</if>
        <if test="eleReadDate!=null">ele_read_date=#{eleReadDate,jdbcType=TIMESTAMP},</if>
        <if test="eleDegree!=null">ele_degree=#{eleDegree,jdbcType=NUMERIC},</if>
        <if test="elePeakDegree!=null">ele_peak_degree=#{elePeakDegree,jdbcType=NUMERIC},</if>
        <if test="eleValleyDegree!=null">ele_valley_degree=#{eleValleyDegree,jdbcType=NUMERIC},</if>
        <if test="updateBy!=null">update_by=#{updateBy.id,jdbcType=VARCHAR},</if>
        <if test="updateDate!=null">update_date=#{updateDate,jdbcType=TIMESTAMP},</if>
        <if test="remarks!=null">remarks=#{remarks,jdbcType=VARCHAR},</if>
        <if test="delFlag!=null">del_flag=#{delFlag,jdbcType=VARCHAR},</if>
    </sql>
    <sql id="BatchUpdate_Set_From_Bean">
        business_id=#{item.businessId,jdbcType=VARCHAR},
        from_source=#{item.fromSource,jdbcType=NUMERIC},
        property_id=#{item.propertyId,jdbcType=VARCHAR},
        house_id=#{item.houseId,jdbcType=VARCHAR},
        room_id=#{item.roomId,jdbcType=VARCHAR},
        house_ele_num=#{item.houseEleNum,jdbcType=VARCHAR},
        ele_read_date=#{item.eleReadDate,jdbcType=TIMESTAMP},
        ele_degree=#{item.eleDegree,jdbcType=NUMERIC},
        ele_peak_degree=#{item.elePeakDegree,jdbcType=NUMERIC},
        ele_valley_degree=#{item.eleValleyDegree,jdbcType=NUMERIC},
        update_by=#{item.updateBy.id,jdbcType=VARCHAR},
        update_date=#{item.updateDate,jdbcType=TIMESTAMP},
        remarks=#{item.remarks,jdbcType=VARCHAR},
        del_flag=#{item.delFlag,jdbcType=VARCHAR},
    </sql>

    <!--where-->
    <sql id="where">
        <where>
            <if test="id!=null and id!=''">AND id=#{id}</if>
            <if test="businessId!=null and businessId!=''">AND business_id=#{businessId}</if>
            <if test="fromSource!=null and fromSource!=''">AND from_source=#{fromSource}</if>
            <if test="propertyId!=null and propertyId!=''">AND property_id=#{propertyId}</if>
            <if test="houseId!=null and houseId!=''">AND house_id=#{houseId}</if>
            <if test="roomId!=null and roomId!=''">AND room_id=#{roomId}</if>
            <if test="houseEleNum!=null and houseEleNum!=''">AND house_ele_num=#{houseEleNum}</if>
            <if test="eleReadDate!=null and eleReadDate!=''">AND ele_read_date=#{eleReadDate}</if>
            <if test="eleDegree!=null and eleDegree!=''">AND ele_degree=#{eleDegree}</if>
            <if test="elePeakDegree!=null and elePeakDegree!=''">AND ele_peak_degree=#{elePeakDegree}</if>
            <if test="eleValleyDegree!=null and eleValleyDegree!=''">AND ele_valley_degree=#{eleValleyDegree}</if>
            AND del_flag = 0
        </where>
    </sql>
    <!--end where-->

    <!--insert-->
    <insert id="insert" parameterType="com.thinkgem.jeesite.modules.fee.electricity.entity.FeeEleReadFlow"
            useGeneratedKeys="true" keyProperty="id">
        insert into fee_ele_read_flow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Columns"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Insert_Values"/>
        </trim>
    </insert>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into fee_ele_read_flow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <include refid="Batch_Insert_Values"/>
            </trim>
        </foreach>
    </insert>
    <!-- end insert -->

    <!-- delete -->
    <delete id="deleteById" parameterType="java.lang.String">
        delete from fee_ele_read_flow
        where  id = #{id,jdbcType=VARCHAR}  
    </delete>

    <delete id="delete" parameterType="com.thinkgem.jeesite.modules.fee.electricity.entity.FeeEleReadFlow">
        delete from fee_ele_read_flow
        <include refid="where"/>
    </delete>
    <!-- end delete -->

    <!-- update -->
    <update id="update" parameterType="com.thinkgem.jeesite.modules.fee.electricity.entity.FeeEleReadFlow">
        update fee_ele_read_flow
        <set>
            <include refid="Update_Set_From_Bean"/>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update fee_ele_read_flow
            <include refid="BatchUpdate_Set_From_Bean"/>
            where
            id = #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>
    <!-- end update -->

    <!-- select -->
    <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from fee_ele_read_flow
        where
        id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="findAllList" resultMap="BaseResultMap"
            parameterType="com.thinkgem.jeesite.modules.fee.electricity.entity.FeeEleReadFlow">
        select
        <include refid="Base_Column_List"/>
        from fee_ele_read_flow
        <include refid="where"/>
        ORDER BY create_date DESC
    </select>

    <select id="findList" resultMap="BaseResultMap"
            parameterType="com.thinkgem.jeesite.modules.fee.electricity.entity.FeeEleReadFlow">
        select
        <include refid="Base_Column_List"/>
        from fee_ele_read_flow
        <include refid="where"/>
        ORDER BY create_date DESC
    </select>

    <select id="getFeeEleReadFlowByFeeBillId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from fee_ele_read_flow
        where
        del_flag=0 and from_source=1
        and business_id = #{feeEleBillId,jdbcType=VARCHAR}
    </select>

    <select id="getLastRecord" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fee_ele_read_flow
        where del_flag = 0
        <if test="id!=null and id!=''">
            AND id != #{id,jdbcType=VARCHAR}
        </if>
        <if test="roomId!=null and roomId!=''">
            AND room_id=#{roomId,jdbcType=VARCHAR}
        </if>
        AND house_id=#{houseId,jdbcType=VARCHAR}
        ORDER BY ele_read_date DESC
        limit 0,1;
    </select>

    <select id="getCurrentReadByDateAndHouseIdAndRoomId"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from fee_ele_read_flow
        where del_flag = 0
        AND DATE_FORMAT(ele_read_date,'%Y-%m-%d')= DATE_FORMAT(#{eleReadDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
        AND house_id=#{houseId,jdbcType=VARCHAR}
        <if test="roomId!=null and roomId!=''">
            AND room_id=#{roomId,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="getFeeEleReadFlowWithAllInfo"
            parameterType="com.thinkgem.jeesite.modules.fee.common.entity.FeeCriteriaEntity"
            resultMap="FeeEleReadFlowWithAllInfo">
        select temp.*,sa.name area_name,sa.id area_id,tpp.PROJECT_NAME,tpp.PROJECT_ADDR project_address,tb.BUILDING_NAME
        from
        (select
        ferf.id,ferf.house_id,ferf.ele_degree,ferf.ele_peak_degree,ferf.ele_read_date,ferf.ele_valley_degree,ferf.property_id,
        th.HOUSE_NO,th.BUILDING_ID,th.intent_mode,ferf.from_source,ferf.create_date,
        case ferf.room_id when '0' then '0' else tr.ROOM_NO end ROOM_NO,ferf.room_id,
        case th.intent_mode when '0' then '整组' when '1' then '合租' else '' end intent_mode_name
        from fee_ele_read_flow ferf
        left join t_room tr on ferf.room_id=tr.ID and tr.DEL_FLAG=0
        left join t_house th on ferf.house_id=th.ID and th.DEL_FLAG=0
        where ferf.room_id is not null AND ferf.del_flag=0
        union
        select
        ferf.id,ferf.house_id,ferf.ele_degree,ferf.ele_peak_degree,ferf.ele_read_date,ferf.ele_valley_degree,ferf.property_id,
        th.HOUSE_NO,th.BUILDING_ID,th.intent_mode,ferf.from_source,ferf.create_date,
        '0' ROOM_NO,'0' room_id,
        case th.intent_mode when '0' then '整组' when '1' then '合租' else '' end intent_mode_name
        from fee_ele_read_flow ferf
        left join t_house th on ferf.house_id=th.ID and th.DEL_FLAG=0
        where ferf.room_id is null AND ferf.del_flag=0
        )temp
        left join t_property_project tpp on temp.property_id=tpp.ID and tpp.DEL_FLAG=0
        left join t_building tb on temp.BUILDING_ID=tb.ID and tb.DEL_FLAG=0
        left join sys_area sa on tpp.AREA_ID=sa.id and sa.del_flag=0
        <include refid="commonWhere"/>
        ORDER BY temp.ele_read_date DESC,temp.room_no ASC
    </select>

    <!-- end select -->
    <sql id="commonWhere">
        <where>
            <if test="areaId!=null and areaId!=''">AND sa.id=#{areaId}</if>
            <if test="propertyId!=null and propertyId!=''">AND tpp.id=#{propertyId}</if>
            <if test="buildId!=null and buildId!=''">AND tb.id=#{buildId}</if>
            <if test="houseId!=null and houseId!=''">AND temp.house_id=#{houseId}</if>
            <if test="startTime!=null and startTime!=''">
                <![CDATA[ AND DATE_FORMAT(#{startTime},'%Y-%m-%d') <= DATE_FORMAT(temp.ele_read_date,'%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null and endTime!=''">
                <![CDATA[ AND DATE_FORMAT(#{endTime},'%Y-%m-%d') >= DATE_FORMAT(temp.ele_read_date,'%Y-%m-%d') ]]>
            </if>
        </where>
    </sql>
</mapper>
