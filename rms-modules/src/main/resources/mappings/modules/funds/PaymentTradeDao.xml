<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.funds.dao.PaymentTradeDao">

	<sql id="paymentTradeColumns">
		a.id AS "id",
		a.trans_id AS "transId",
		a.trade_id AS
		"tradeId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks
		AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="paymentTradeJoins">
	</sql>

	<select id="get" resultType="PaymentTrade">
		SELECT
		<include refid="paymentTradeColumns" />
		FROM t_payment_trade a
		<include refid="paymentTradeJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="PaymentTrade">
		SELECT
		<include refid="paymentTradeColumns" />
		FROM t_payment_trade a
		<include refid="paymentTradeJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="transId != null and transId != ''">
				AND a.trans_id = #{transId}
			</if>
			<if test="tradeId != null and tradeId != ''">
				AND a.trade_id = #{tradeId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="PaymentTrade">
		SELECT
		<include refid="paymentTradeColumns" />
		FROM t_payment_trade a
		<include refid="paymentTradeJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO t_payment_trade(
		id,
		trans_id,
		trade_id,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{transId},
		#{tradeId},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE t_payment_trade SET
		trans_id = #{transId},
		trade_id = #{tradeId},
		update_by = #{updateBy.id},
		update_date =
		#{updateDate},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<update id="delete">
		UPDATE    	 t_payment_trade 
		   SET       del_flag = #{DEL_FLAG_DELETE},
				     update_by = #{updateBy.id},
				     update_date = #{updateDate}
		 WHERE 	     
		 			del_flag = #{DEL_FLAG_NORMAL}
					<if test="tradeId != null and tradeId != ''">
						AND trade_id = #{tradeId}
					</if>
					<if test="transId != null and transId != ''">
						AND trans_id = #{transId}
					</if>
					<if test="tradeIdList != null">
					 	and trade_id in 
				         <foreach item="item" index="index" collection="tradeIdList" open="(" separator="," close=")">  
				             #{item}  
				         </foreach>  
			      	</if>
	</update>

	<select id="getListByTradeIdList" resultType="PaymentTrade">
		SELECT
		<include refid="paymentTradeColumns" />
		FROM t_payment_trade a
		WHERE a.DEL_FLAG = '0'
		<if test="list != null">
			and trade_id in
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
</mapper>