<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.funds.dao.PaymentTransDao">

	<sql id="paymentTransColumns">
		a.id AS "id",
		a.trade_type AS "tradeType",
		a.payment_type AS "paymentType",
		a.trans_id AS "transId",
		a.trade_direction AS "tradeDirection",
		a.start_date AS "startDate",
		a.expired_date AS "expiredDate",
		a.trade_amount AS "tradeAmount",
		a.trans_amount AS "transAmount",
		a.last_amount AS "lastAmount",
		a.transfer_deposit_amount AS "transferDepositAmount",
		a.trans_status AS "transStatus",
		a.postpaid_fee_id AS "postpaidFeeId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		case 
			 when a.trade_type=1 or a.trade_type=2 then ta.agreement_name
		     when a.trade_type=0 then tl.contract_name
		     else tc.contract_name
		end transName,

		case
			 when a.trade_type=1 or a.trade_type=2 then ta.property_project_id
		     when a.trade_type=0 then tl.property_project_id
		     else tc.property_project_id
		end property_project_id,

		case 
			when a.trade_type=1 or a.trade_type=2 then ta.agreement_code
			when a.trade_type=0 then tl.contract_code
			else tc.contract_code
		end transObjectNo,
		tl.remittance_date as "remittanceDate",
		case
			when a.payment_type=6 or a.payment_type=14 or a.payment_type=16 or a.payment_type=18 or a.payment_type=20 or a.payment_type=22 then tc.ren_months
			else 0
		end splitPaidMonths
	</sql>

	<sql id="paymentTransJoins">
		left join t_deposit_agreement ta on a.trans_id=ta.id 
		left join t_rent_contract tc on a.trans_id=tc.id
		left join t_lease_contract tl on a.trans_id=tl.id
	</sql>

	<select id="get" resultType="PaymentTrans">
		SELECT
		<include refid="paymentTransColumns" />
		FROM t_payment_trans a
		<include refid="paymentTransJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="PaymentTrans">
		select t.* from(
		SELECT
		<include refid="paymentTransColumns" />
		FROM t_payment_trans a
		<include refid="paymentTransJoins" />

		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="tradeType != null and tradeType != ''">
				AND a.trade_type = #{tradeType}
			</if>
			<if test="tradeTypeList != null and tradeTypeList != ''">
			    and a.trade_type in 
		         <foreach item="item" index="index" collection="tradeTypeList" open="(" separator="," close=")">  
		             #{item}  
		         </foreach>  
      		</if>
			<if test="paymentType != null and paymentType != ''">
				AND a.payment_type = #{paymentType}
			</if>
			<if test="transId != null and transId != ''">
				AND a.trans_id = #{transId}
			</if>
			<if test="tradeDirection != null and tradeDirection != ''">
				AND a.trade_direction = #{tradeDirection}
			</if>
			<if test="transStatus != null and transStatus != ''">
				AND a.trans_status = #{transStatus}
			</if>
			<if test="postpaidFeeId != null and postpaidFeeId != ''">
				and postpaid_fee_id = #{postpaidFeeId}
			</if>
			<if test="startDate_begin != null and startDate_begin != ''">
				<![CDATA[AND a.start_date >= #{startDate_begin}]]>
			</if>
			<if test="startDate_end != null and startDate_end != ''">
				<![CDATA[AND a.start_date <= #{startDate_end}]]>
			</if>
			<if test="expiredDate_begin != null and expiredDate_begin != ''">
				<![CDATA[AND a.expired_date >= #{expiredDate_begin}]]>
			</if>
			<if test="expiredDate_end != null and expiredDate_end != ''">
				<![CDATA[AND a.expired_date <= #{expiredDate_end}]]>
			</if>
		</where>
		) t

		left join t_property_project tp on t.property_project_id = tp.id
		where 1=1
		<if test="transName != null and transName != ''">
			AND t.transName like concat('%',#{transName},'%')
		</if>
		<if test="transObjectNo != null and transObjectNo != ''">
			AND t.transObjectNo like concat('%',#{transObjectNo},'%')
		</if>
		<if test="remittanceDate != null and remittanceDate != ''">
			AND t.remittanceDate = #{remittanceDate}
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		order by FIELD(t.paymentType, '2', '3', '4', '5',
		'6','0','1','7','8','9','10','11','12','13','14','15','16','18','19','20','21','22','23','24','25','26','27'),t.startDate
	</select>

	<select id="findAllList" resultType="PaymentTrans">
		SELECT
		<include refid="paymentTransColumns" />
		FROM t_payment_trans a
		<include refid="paymentTransJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>

		ORDER BY FIELD(a.payment_type, '2', '3', '4', '5',
		'6','0','1','7','8','9','10','11','12','13','14','15','16','18','19','20','21','22','23','24','25','26','27'),a.start_date
	</select>

	<insert id="insert">
		INSERT INTO t_payment_trans(
		id,
		trade_type,
		payment_type,
		trans_id,
		trade_direction,
		start_date,
		expired_date,
		trade_amount,
		trans_amount,
		last_amount,
		transfer_deposit_amount,
		trans_status,
		postpaid_fee_id,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{tradeType},
		#{paymentType},
		#{transId},
		#{tradeDirection},
		#{startDate},
		#{expiredDate},
		#{tradeAmount},
		#{transAmount},
		#{lastAmount},
		#{transferDepositAmount},
		#{transStatus},
		#{postpaidFeeId},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE t_payment_trans SET
		trade_type = #{tradeType},
		payment_type = #{paymentType},
		trans_id = #{transId},
		trade_direction =
		#{tradeDirection},
		start_date = #{startDate},
		expired_date =
		#{expiredDate},
		trade_amount = #{tradeAmount},
		trans_amount =
		#{transAmount},
		last_amount = #{lastAmount},
		transfer_deposit_amount =
		#{transferDepositAmount},
		trans_status = #{transStatus},
		update_by =
		#{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks}
		WHERE
		id = #{id}
	</update>

	<update id="delete">
		UPDATE 	t_payment_trans 
		SET 	del_flag = #{DEL_FLAG_DELETE},
				update_by = #{updateBy.id},
				update_date = #{updateDate}
		<where>
			<if test="id != null and id != ''">
				and id = #{id}
			</if>
			<if test="transId != null and transId != ''">
				and trans_id = #{transId}
			</if>
			<if test="tradeType != null and tradeType != ''">
				and trade_type = #{tradeType}
			</if>
			<if test="paymentType != null and paymentType != ''">
				and payment_type = #{paymentType}
			</if>
			<if test="tradeDirection != null and tradeDirection != ''">
				and trade_direction = #{tradeDirection}
			</if>
			<if test="transStatus != null and transStatus != ''">
				and trans_status = #{transStatus}
			</if>
			<if test="postpaidFeeId != null and postpaidFeeId != ''">
				and postpaid_fee_id = #{postpaidFeeId}
			</if>
			<if test="tradeTypeList != null">
			    and trade_type in 
		         <foreach item="item" index="index" collection="tradeTypeList" open="(" separator="," close=")">  
		             #{item}  
		         </foreach>  
      		</if>
      		<if test="paymentTypeList != null">
			    and payment_type in 
		         <foreach item="item" index="index" collection="paymentTypeList" open="(" separator="," close=")">  
		             #{item}
		         </foreach>  
      		</if>
		</where>
	</update>
	
	<update id="rollbackDelete">
		UPDATE 	t_payment_trans 
		SET 	del_flag = #{DEL_FLAG_NORMAL},
				update_by = #{updateBy.id},
				update_date = #{updateDate}
		<where>
			del_flag = #{DEL_FLAG_DELETE}
			<if test="id != null and id != ''">
				and id = #{id}
			</if>
			<if test="transId != null and transId != ''">
				and trans_id = #{transId}
			</if>
			<if test="tradeType != null and tradeType != ''">
				and trade_type = #{tradeType}
			</if>
			<if test="paymentType != null and paymentType != ''">
				and payment_type = #{paymentType}
			</if>
			<if test="tradeDirection != null and tradeDirection != ''">
				and trade_direction = #{tradeDirection}
			</if>
			<if test="transStatus != null and transStatus != ''">
				and trans_status = #{transStatus}
			</if>
			<if test="postpaidFeeId != null and postpaidFeeId != ''">
				and postpaid_fee_id = #{postpaidFeeId}
			</if>
			<if test="tradeTypeList != null">
			    and trade_type in 
		         <foreach item="item" index="index" collection="tradeTypeList" open="(" separator="," close=")">  
		             #{item}  
		         </foreach>  
      		</if>
      		<if test="paymentTypeList != null">
			    and payment_type in 
		         <foreach item="item" index="index" collection="paymentTypeList" open="(" separator="," close=")">  
		             #{item}
		         </foreach>  
      		</if>
		</where>
	</update>

	<!--查询某个房屋下合同指定时间内进账款项 -->
	<select id="queryIncomePaymentByTransIdAndTime" resultType="PaymentTrans">
		SELECT t.*
		FROM t_payment_trans t
		WHERE t.DEL_FLAG = '0'
		AND t.trade_type in ('3', '4')
		AND t.payment_type = '6'
		AND t.trade_direction = '1'
		AND t.trans_status = '2'
		<if test="startDate != null and startDate != ''">
			<![CDATA[
				AND t.START_DATE >=  #{startDate}
			 ]]>
		</if>
		<if test="endDate != null and endDate != ''">
			<![CDATA[
				AND t.START_DATE <=  #{endDate}
			 ]]>
		</if>
		<if test="transIdList != null">
			and t.trans_id in
			<foreach item="item" index="index" collection="transIdList" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>

	<!--查询某个房屋下合同指定时间内出账款项 -->
	<select id="queryCostPaymentByTransIdAndTime" resultType="PaymentTrans">
		SELECT t.*
		FROM t_payment_trans t
		WHERE t.DEL_FLAG = '0'
		AND t.trade_type in ('6', '9')
		AND t.payment_type = '6'
		AND t.trade_direction = '0'
		AND t.trans_status = '2'
		<if test="startDate != null and startDate != ''">
			<![CDATA[
				AND t.START_DATE >=  #{startDate}
			 ]]>
		</if>
		<if test="endDate != null and endDate != ''">
			<![CDATA[
				AND t.START_DATE <=  #{endDate}
			 ]]>
		</if>
		<if test="transIdList != null">
			and t.trans_id in
			<foreach item="item" index="index" collection="transIdList" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
</mapper>